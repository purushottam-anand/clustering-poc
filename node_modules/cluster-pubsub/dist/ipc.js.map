{"version":3,"sources":["../src/ipc.es6"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;IAEqB,G;;;AACnB,iBAA0B;AAAA,QAAd,KAAc,yDAAN,IAAM;;AAAA;;AAAA;;AAAA,UAQ1B,KAR0B,GAQlB;AACN,cADM,sBACK;AACT,cAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;AACD,OAHK;AAIN,UAJM,gBAID,MAJC,EAIO,OAJP,EAIgB,IAJhB,EAIsB;AAC1B,cAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,MAA7B,EAAqC,OAArC,EAA8C,IAA9C,CAAN;AACD,OANK;AAON,eAPM,qBAOI,OAPJ,EAOa,IAPb,EAOmB;AACvB,cAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,OAA7B,EAAsC,IAAtC,CAAN;AACD,OATK;AAUN,QAVM,cAUH,OAVG,EAUe;AAAA,0CAAN,IAAM;AAAN,cAAM;AAAA;;AACnB,cAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,OAA7B,EAAsC,IAAtC,CAAN;AACD,OAZK;AAaN,UAbM,gBAaD,OAbC,EAaiB;AAAA,2CAAN,IAAM;AAAN,cAAM;AAAA;;AACrB,cAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,OAA7B,EAAsC,IAAtC,CAAN;AACD,OAfK;AAgBN,oBAhBM,0BAgBS,OAhBT,EAgB2B;AAAA,2CAAN,IAAM;AAAN,cAAM;AAAA;;AAC/B,cAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,OAA7B,EAAsC,IAAtC,CAAN;AACD;AAlBK,KARkB;;;AAGxB,UAAK,KAAL,GAAa,KAAb;;AAEA,UAAK,EAAL,CAAQ,OAAR,EAAiB;AAAA,aAAO,QAAQ,KAAR,CAAc,GAAd,CAAP;AAAA,KAAjB;AALwB;AAMzB;;;;;;;4BAwBc;AAAA;;AAAA,yCAAN,IAAM;AAAN,YAAM;AAAA;;AACb,gHAAqB,IAArB;AACD;;;0BAEY;AACX,UAAI,KAAK,KAAT,EAAgB;AAAA;;AACd,6BAAQ,GAAR;AACD;AACF;;;6BAEoB;AAAA,UAAd,EAAc,yDAAT;AAAA,eAAM,CAAN;AAAA,OAAS;;AACnB,YAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,EAA7B,CAAN;AACD;;;+BAEU,K,EAAO;AAChB,YAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,KAA7B,CAAN;AACD;;;yBAEI,I,EAAM,O,EAAS,I,EAAM;AACxB,YAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,OAAnC,EAA4C,IAA5C,CAAN;AACD;;;;;;kBAnDkB,G","file":"ipc.es6","sourcesContent":["import EventEmitter from 'events';\n\nexport default class IPC extends EventEmitter {\n  constructor(debug = true) {\n    super();\n\n    this.debug = debug;\n\n    this.on('error', err => console.error(err));\n  }\n\n  Slave = {\n    volatile() {\n      throw new Error('Not implemented');\n    },\n    emit(origin, channel, data) {\n      throw new Error('Not implemented', origin, channel, data);\n    },\n    broadcast(channel, data) {\n      throw new Error('Not implemented', channel, data);\n    },\n    on(channel, ...args) {\n      throw new Error('Not implemented', channel, args);\n    },\n    once(channel, ...args) {\n      throw new Error('Not implemented', channel, args);\n    },\n    removeListener(channel, ...args) {\n      throw new Error('Not implemented', channel, args);\n    }\n  };\n\n  // privatizing emit\n  _emit(...args) {\n    return super.emit(...args);\n  }\n\n  log(...args) {\n    if (this.debug) {\n      console.log(...args);\n    }\n  }\n\n  listen(cb = () => 0) {\n    throw new Error('Not implemented', cb);\n  }\n\n  disconnect(token) {\n    throw new Error('Not implemented', token);\n  }\n\n  emit(dest, channel, data) {\n    throw new Error('Not implemented', dest, channel, data);\n  }\n}\n"]}