{"version":3,"sources":["../src/pubsub-slave.es6"],"names":[],"mappings":"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","file":"pubsub-slave.es6","sourcesContent":["import ipc from 'node-ipc';\nimport async from 'async';\nimport EventEmitter from 'events';\nimport Promise from 'bluebird';\nimport crypto from 'crypto';\n\nconst noop = () => 0;\n\nconst defaultEventMap = {\n  delimiter: '-',\n\n  // request events\n  requestBroadcast: 'broadcast',\n  requestEmit: 'emit',\n  requestServerAddress: 'get-server-address',\n  requestAddToken: 'add-token',\n  requestRemoveToken: 'remove-token',\n  requestAuthorization: 'authorize',\n  requestDeauthorization: 'deauthorize',\n  requestMasterEmit: 'slave-emit',\n  requestPeerBroadcast: 'broadcast-peer',\n  requestPeerEmit: 'emit-peer',\n\n  // response events\n  responseTokenAdded: 'token-added',\n  responseTokenRemoved: 'token-removed',\n  responseAuthorized: 'authorized',\n  responseAliveCheck: 'slave-alive',\n  responseAlive: 'is-alive',\n  responseClientConnected: 'client-connected',\n  responseClientDisconnected: 'client-disconnected',\n  responseClientAwk: 'client-received',\n\n  responseMasterMessage: 'master-message',\n  responseMasterAwk: 'master-received',\n  responseSlaveReceived: 'slave-got',\n\n  responsePeerMessage: 'peer-message',\n  responsePeerReceived: 'peer-got',\n  responsePeerAwk: 'peer-received',\n\n  responseServerAddress: 'server-address'\n};\n\n// TODO\n// Client events: connect, disconnect, accept, reject\n// Peer events: connect, disconnect, channel\n// Master events: channel\n\nconst active = {};\n\nconst defaultOpts = {\n  resDefaultTimeout: 60000,\n  debug: false,\n  concurrency: 50,\n  scope: 'socket',\n  eventMap: defaultEventMap,\n  appspace: 'socket'\n};\n\nclass PubSubSlave extends EventEmitter {\n  constructor(origin, address, opts = defaultOpts) {\n    super();\n\n    opts = Object.assign(defaultOpts, opts);\n\n    this.origin = origin;\n    this.opts = opts;\n    this.scope = opts.scope;\n    this.eventMap = Object.assign(defaultEventMap, opts.eventMap);\n    this.remoteAddress = address;\n    this.remote = opts.remote;\n    this.resDefaultTimeout = opts.resDefaultTimeout;\n    this.debug = opts.debug;\n\n    this.setMaxListeners(Number.MAX_SAFE_INTEGER);\n\n    this.queue = async.queue((data, callback) => {\n      const _callback = () => process.nextTick(callback);\n      if (typeof data === 'function') {\n        if (data.length) {\n          data(_callback);\n        } else {\n          data();\n          _callback();\n        }\n\n        return;\n      }\n\n      this._handleTransmit(data, _callback);\n    }, opts.concurrency);\n\n    this.queue.pause();\n  }\n\n  Peer = {\n    broadcast: this._peerBroadcast.bind(this),\n    volatile: this._peerVolatile.bind(this),\n    emit: this._peerEmit.bind(this),\n    on: this._peerOn.bind(this),\n    removeListener: this._peerRemoveListener.bind(this),\n    once: this._peerOnce.bind(this)\n  };\n\n  Client = {\n    broadcast: this.broadcast.bind(this),\n    volatile: this.volatile.bind(this),\n    emit: this.emit.bind(this),\n    accept: this.accept.bind(this),\n    reject: this.reject.bind(this),\n    on: this._clientOn.bind(this),\n    removeListener: this._clientRemoveListener.bind(this),\n    once: this._clientOnce.bind(this),\n    address: this.address.bind(this)\n  };\n\n  Master = {\n    emit: this._masterEmit.bind(this),\n    on: this._masterOn.bind(this),\n    removeListener: this._masterRemoveListener.bind(this),\n    once: this._masterOnce.bind(this)\n  };\n\n  _clientOn(channel, ...args) {\n    return this.on(`client-${channel}`, ...args);\n  }\n\n  _clientOnce(channel, ...args) {\n    return this.once(`client-${channel}`, ...args);\n  }\n\n  _clientRemoveListener(channel, ...args) {\n    return this.removeListener(`client-${channel}`, ...args);\n  }\n\n  _masterOn(channel, ...args) {\n    return this.on(this.for(this.eventMap.responseMasterMessage, channel), ...args);\n  }\n\n  _masterOnce(channel, ...args) {\n    return this.on(this.for(this.eventMap.responseMasterMessage, channel), ...args);\n  }\n\n  _masterRemoveListener(channel, ...args) {\n    return this.on(this.for(this.eventMap.responseMasterMessage, channel), ...args);\n  }\n\n  _peerOn(channel, ...args) {\n    return this.on(this.for(this.eventMap.responsePeerMessage, channel), ...args);\n  }\n\n  _peerOnce(channel, ...args) {\n    return this.on(this.for(this.eventMap.responsePeerMessage, channel), ...args);\n  }\n\n  _peerRemoveListener(channel, ...args) {\n    return this.on(this.for(this.eventMap.responsePeerMessage, channel), ...args);\n  }\n\n  _masterEmit(channel, data, awk = true) {\n    if (!awk) {\n      return this.queue.push({action: this.eventMap.requestMasterEmit, channel, data});\n    }\n\n    return new Promise((resolve, reject) => {\n      this.queue.push({action: this.eventMap.requestMasterEmit, channel, data, awk, resolve, reject});\n    });\n  }\n\n  _peerBroadcast(channel, data, dest) {\n    this.queue.push({channel, action: this.eventMap.requestPeerBroadcast, data, dest, awk: true});\n  }\n\n  _peerVolatile(dest, channel, data) {\n    this._peerEmit(dest, channel, data, false);\n  }\n\n  _peerEmit(dest, channel, data, awk = true, resolve, reject) {\n    if (!awk) {\n      return this.queue.push({action: this.eventMap.requestPeerEmit, channel, data, dest});\n    }\n\n    if (typeof resolve === 'function' && typeof reject === 'function') {\n      return this.queue.push({action: this.eventMap.requestPeerEmit, channel, data, awk, dest, resolve, reject});\n    }\n\n    return new Promise((_resolve, _reject) => {\n      const req = {\n        action: this.eventMap.requestPeerEmit,\n        channel,\n        data,\n        awk,\n        dest,\n        resolve: _resolve,\n        reject: _reject\n      };\n\n      this.queue.push(req);\n    });\n  }\n\n  // private emit\n  _emit(...args) {\n    super.emit(...args);\n  }\n\n  resolveHost(address) {\n    let host = address.hostname || '0.0.0.0';\n\n    if (host === 'localhost' || host === '::1' || host === '127.0.0.1') {\n      host = '0.0.0.0';\n    }\n\n    return host;\n  }\n\n  resolvePort(address) {\n    return address.port;\n  }\n\n  configure(_ipc) {\n    noop(_ipc);\n  }\n\n  connect() {\n    const eventMap = this.eventMap;\n    const address = this.remoteAddress;\n\n    if (!active.hasOwnProperty(this.scope)) {\n      active[this.scope] = {};\n    }\n\n    active[this.scope] = {[this.origin]: true};\n\n    ipc.config.retry = 5000;\n    ipc.config.maxRetries = 20;\n    ipc.config.silent = !this.debug;\n    ipc.config.networkHost = this.resolveHost(address);\n    ipc.config.networkPort = this.resolvePort(address);\n    ipc.config.appspace = this.opts.master || this.opts.appspace;\n\n    this.configure(ipc);\n\n    return new Promise(resolve => {\n      ipc[this.remote ? 'connectToNet' : 'connectTo'](this.scope, () => {\n        ipc.config.stopRetrying = false;\n        ipc.of[this.scope].emit(eventMap.requestAuthorization, {id: this.origin});\n        resolve();\n      });\n\n      ipc.of[this.scope].on(eventMap.responseAliveCheck, () => {\n        ipc.of[this.scope].emit(eventMap.responseAlive, {id: this.origin});\n      });\n\n      ipc.of[this.scope].on(eventMap.responseAuthorized, () => {\n        this.queue.resume();\n        this._emit('connect');\n        this._emit('authorized');\n      });\n\n      ipc.of[this.scope].on('disconnect', () => {\n        this.queue.pause();\n        this._emit('disconnect');\n      });\n\n      ipc.of[this.scope].on(eventMap.responseTokenAdded, data => {\n        if (data.dest !== this.origin) {\n          return;\n        }\n\n        data = this.unwrap(data, eventMap.responseTokenAdded).data;\n\n        this._emit(eventMap.responseTokenAdded, data);\n        this._emit(this.for(eventMap.responseTokenAdded, data.token), data);\n      });\n\n      ipc.of[this.scope].on(eventMap.responseServerAddress, data => {\n        if (data.dest !== this.origin) {\n          return;\n        }\n\n        data = this.unwrap(data, eventMap.responseServerAddress).data;\n\n        this._emit(eventMap.responseServerAddress, data);\n      });\n\n      ipc.of[this.scope].on(eventMap.responseTokenRemoved, data => {\n        if (data.dest !== this.origin) {\n          return;\n        }\n\n        data = this.unwrap(data, eventMap.responseTokenRemoved).data;\n\n        this._emit(eventMap.responseTokenRemoved, data);\n        this._emit(this.for(eventMap.responseTokenRemoved, data.token), data);\n        this._emit(`client-reject-${data.token}`, data.token);\n        this._emit(`client-reject`, data.token);\n      });\n\n      ipc.of[this.scope].on(eventMap.responseClientAwk, data => {\n        if (data.dest !== this.origin) {\n          return;\n        }\n\n        data = this.unwrap(data, eventMap.responseClientAwk).data;\n\n        this._emit(eventMap.responseClientAwk, data);\n        this._emit(this.for(eventMap.responseClientAwk, data.id), data);\n      });\n\n      ipc.of[this.scope].on(eventMap.responsePeerAwk, data => {\n        if (data.dest !== this.origin) {\n          return;\n        }\n\n        data = this.unwrap(data, eventMap.responsePeerAwk).data;\n\n        this._emit(eventMap.responsePeerAwk, data);\n        this._emit(this.for(eventMap.responsePeerAwk, data.id), data);\n      });\n\n      ipc.of[this.scope].on(eventMap.responseMasterAwk, data => {\n        if (data.dest !== this.origin) {\n          return;\n        }\n\n        data = this.unwrap(data, eventMap.responseMasterAwk).data;\n\n        this._emit(eventMap.responseMasterAwk, data);\n        this._emit(this.for(eventMap.responseMasterAwk, data.id), data);\n      });\n\n      ipc.of[this.scope].on(eventMap.responseClientConnected, data => {\n        if (data.dest !== this.origin) {\n          return;\n        }\n\n        data = this.unwrap(data, eventMap.responseClientConnected).data;\n\n        this._emit(eventMap.responseClientConnected, data);\n        this._emit(this.for(eventMap.responseClientConnected, data.token), data);\n        this._emit(`client-connect-${data.token}`, data.token);\n        this._emit(`client-connect`, data.token);\n      });\n\n      ipc.of[this.scope].on(eventMap.responsePeerMessage, data => {\n        if (data.dest !== this.origin) {\n          return;\n        }\n\n        data = this.unwrap(data, eventMap.responsePeerMessage).data;\n\n        let v = 0;\n        const respond = res => {\n          if (v++) return;\n          const response = {id: this.origin, data: {...data, _data: data.data, data: res}};\n          this.queue.push(() => this._emitIPC(eventMap.responsePeerReceived, response));\n        };\n\n        this._emit(eventMap.responsePeerMessage, data.from, data, respond);\n        this._emit(this.for(eventMap.responsePeerMessage, data.channel), data.from, data.data, respond);\n      });\n\n      ipc.of[this.scope].on(eventMap.responseMasterMessage, data => {\n        if (data.dest !== this.origin) {\n          return;\n        }\n\n        data = this.unwrap(data, eventMap.responseMasterMessage).data;\n\n        let v = 0;\n        const respond = res => {\n          if (v++) return;\n          const response = {id: this.origin, data: {...data, _data: data.data, data: res}};\n          this.queue.push(() => this._emitIPC(eventMap.responseSlaveReceived, response));\n        };\n\n        this._emit(eventMap.responseMasterMessage, data, respond);\n        this._emit(this.for(eventMap.responseMasterMessage, data.channel), data.data, respond);\n      });\n\n      ipc.of[this.scope].on(eventMap.responseClientDisconnected, data => {\n        data = this.unwrap(data, eventMap.responseClientDisconnected).data;\n\n        this._emit(eventMap.responseClientDisconnected, data);\n        this._emit(this.for(eventMap.responseClientDisconnected, data.token), data);\n        this._emit(`client-disconnect-${data.token}`, data.token);\n        this._emit(`client-disconnect`, data.token);\n      });\n    });\n  }\n\n  _generateUUID() {\n    return crypto.randomBytes(10).toString('hex');\n  }\n\n  unwrap(data) {\n    return data || {data: {}};\n  }\n\n  wrap(data) {\n    return data;\n  }\n\n  _handleTransmit({token, dest, channel, data, resolve, action, reject, awk}, callback) {\n    const eventMap = this.eventMap;\n    const eventId = this._generateUUID();\n\n    if (action === this.eventMap.requestBroadcast ||\n      action === this.eventMap.requestPeerBroadcast) {\n      const req = {\n        id: this.origin,\n        data: {\n          dest,\n          id: eventId,\n          token,\n          channel,\n          data,\n          awk\n        }\n      };\n\n      this._emitIPC(action, req);\n\n      return callback();\n    }\n\n    let tid;\n    let event;\n\n    const accepted = res => {\n      clearTimeout(tid);\n      resolve(res.data);\n    };\n\n    const timeout = () => {\n      this.removeListener(event, accepted);\n      reject(Error('No response received'));\n    };\n\n    let awkChan;\n\n    if (action === eventMap.requestEmit) {\n      awkChan = eventMap.responseClientAwk;\n    } else if (action === eventMap.requestPeerEmit) {\n      awkChan = eventMap.responsePeerAwk;\n    } else if (eventMap.requestMasterEmit) {\n      awkChan = eventMap.responseMasterAwk;\n    }\n\n    if (awk) {\n      event = this.for(awkChan, eventId);\n\n      const wait = typeof awk === 'number' && awk > 0 ? awk : this.resDefaultTimeout;\n\n      this.once(event, accepted);\n      tid = setTimeout(timeout, wait);\n    }\n\n    const req = {\n      id: this.origin,\n      data: {\n        dest,\n        id: eventId,\n        token,\n        channel,\n        data,\n        awk\n      }\n    };\n\n    this._emitIPC(action, req);\n\n    callback();\n  }\n\n  for(event, id) {\n    return [event, id].join(this.eventMap.delimiter);\n  }\n\n  _emitIPC(event, data) {\n    ipc.of[this.scope].emit(event, this.wrap(data, event));\n  }\n\n  accept(token) {\n    const eventMap = this.eventMap;\n\n    return new Promise(resolve => {\n      if (eventMap.responseTokenAdded) {\n        this.once(this.for(eventMap.responseTokenAdded, token), data => resolve(data));\n      }\n\n      const req = {\n        id: this.origin,\n        data: {token}\n      };\n\n      this._emitIPC(eventMap.requestAddToken, req);\n\n      if (!eventMap.responseTokenAdded) {\n        resolve(token);\n      }\n    });\n  }\n\n  reject(token) {\n    const eventMap = this.eventMap;\n\n    return new Promise(resolve => {\n      if (eventMap.responseTokenRemoved) {\n        this.once(this.for(eventMap.responseTokenRemoved, token), () => {\n          resolve(token);\n        });\n      }\n\n      const req = {\n        id: this.origin,\n        data: {token}\n      };\n\n      this._emitIPC(eventMap.requestRemoveToken, req);\n\n      if (!eventMap.responseTokenRemoved) {\n        resolve(token);\n      }\n    });\n  }\n\n  volatile(token, channel, data) {\n    return this.emit(token, channel, data, false);\n  }\n\n  emit(token, channel, data, awk = true, resolve, reject) {\n    if (!awk) {\n      return this.queue.push({token, action: this.eventMap.requestEmit, channel, data});\n    }\n\n    if (typeof resolve === 'function' && typeof reject === 'function') {\n      return this.queue.push({token, action: this.eventMap.requestEmit, channel, data, awk, resolve, reject});\n    }\n\n    return new Promise((_resolve, _reject) => {\n      const req = {\n        token,\n        action: this.eventMap.requestEmit,\n        channel,\n        data,\n        awk,\n        resolve: _resolve,\n        reject: _reject\n      };\n\n      this.queue.push(req);\n    });\n  }\n\n  address() {\n    if (!this._address) {\n      this._address = new Promise(resolve => {\n        this.queue.push(callback => {\n          this.once(this.eventMap.responseServerAddress, _address => resolve(_address));\n\n          const req = {\n            id: this.origin,\n            data: {}\n          };\n\n          this._emitIPC(this.eventMap.requestServerAddress, req);\n          callback();\n        });\n      });\n    }\n\n    return this._address;\n  }\n\n  broadcast(channel, data) {\n    this.queue.push({channel, action: this.eventMap.requestBroadcast, data, awk: true});\n  }\n\n  disconnect() {\n    if (active.hasOwnProperty(this.scope)) {\n      delete active[this.scope][this.origin];\n\n      const sync = ipc.config.sync;\n      ipc.config.sync = true;\n\n      // bypass queue\n      try {\n        ipc.of[this.scope].emit(this.eventMap.requestDeauthorization, {id: this.origin, data: {origin: this.origin}});\n      } catch (e) {\n        // ignore\n      }\n\n      ipc.config.sync = sync;\n\n      if (!active[this.scope].length) {\n        ipc.disconnect(this.scope);\n      }\n    }\n  }\n\n  isRemote() {\n    return this.remote;\n  }\n\n  isLocal() {\n    return !this.remote;\n  }\n}\n\nexport default PubSubSlave;\n"]}