{"version":3,"sources":["../../src/client-com/sio.es6"],"names":[],"mappings":"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","file":"sio.es6","sourcesContent":["import io from 'socket.io';\nimport ClientCom from '../client-com.es6';\n\nexport class SocketIO extends ClientCom {\n  constructor(debug = true) {\n    super(debug);\n    this.sio = io();\n    this.connected = new Map();\n  }\n\n  attach(server) {\n    this.sio.on('connection', socket => this._onConnect(socket));\n    this.sio.attach(server);\n  }\n\n  accept(origin, token) {\n    const uuid = super.accept(origin, token);\n\n    this.log('added uuid', uuid);\n\n    this._emit('token-added', origin, {token, uuid});\n  }\n\n  reject(origin, token) {\n    const uuid = super.reject(origin, token);\n\n    this.log('removed uuid', uuid);\n\n    if (uuid) {\n      const currSocket = this.connected.get(uuid);\n      SocketIO.terminate(currSocket);\n\n      this.connected.delete(token);\n    }\n\n    this._emit('token-removed', origin, {token});\n  }\n\n  // TODO awk?\n  broadcast(channel, data) {\n    this.sio.sockets.emit(channel, data);\n  }\n\n  // FIXME respond with client-error?\n  emit(origin, token, channel, id, data, awk = true) {\n    const uuid = this.uuidOf(origin, token);\n    const socket = this.connected.get(uuid);\n\n    if (socket) {\n      this.log(`socket exists on ${token}`);\n\n      // FIXME too much scoping?\n      try {\n        if (!awk) {\n          socket.emit(channel, data);\n        } else {\n          socket.emit(channel, data, res => {\n            this._emit('client-received', origin, {token, channel, id, _data: data, data: res}); // awk\n          });\n        }\n\n        this.log(`socket data emitted ${token}/${channel}`, data);\n      } catch (e) {\n        console.error(e);\n        // ignore\n      }\n    } else {\n      this.log(`token does not exist: ${token}`);\n    }\n  }\n\n  static terminate(socket) {\n    if (!socket) {\n      return;\n    }\n\n    try {\n      socket.emit('termination', {data: 'forced disconnection'});\n      socket.disconnect();\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  _onConnect(socket) {\n    const uuid = socket.handshake.query.id;\n\n    if (this.isAccepted(uuid)) {\n      const {origin, token} = this.originOf(uuid);\n      const currSocket = this.connected.get(uuid);\n\n      SocketIO.terminate(currSocket);\n\n      this.connected.set(uuid, socket);\n\n      this.log(`server connected to client with token: ${token}`);\n\n      socket.on('disconnect', () => {\n        this.log(`socket disconnected with token: ${token}`);\n\n        this.connected.delete(uuid);\n\n        this._emit('client-disconnected', origin, {token});\n      });\n    } else {\n      console.log('socket uuid not found', uuid);\n\n      SocketIO.terminate(socket);\n    }\n  }\n}\n\nexport default SocketIO;\n"]}